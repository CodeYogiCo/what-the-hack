package com.snapdeal.gohack.serviceImpl;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.util.Date;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Component;

import com.itextpdf.text.Anchor;
import com.itextpdf.text.BadElementException;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chapter;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Font.FontFamily;
import com.itextpdf.text.List;
import com.itextpdf.text.ListItem;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Section;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.snapdeal.gohack.model.Idea;


@Component
public class PdfBuilder {
	
	@Autowired
	private JdbcTemplate jdbcTemplate;

	private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
			Font.BOLD);
	private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12,
			Font.NORMAL, BaseColor.RED);
	private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16,
			Font.BOLD);
	private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
			Font.BOLD);
	
	
	  private  void createTable(Section subCatPart)
		      throws BadElementException {

	    	java.util.List<Idea> listofIdeas= jdbcTemplate.query("SELECT *  FROM user_ideas AS t1 INNER JOIN idea_status "
					+ "AS t2 ON t1.ideaNumber = t2.ideaNumber ",
					new BeanPropertyRowMapper(Idea.class));
	    	 Font bfBold12 = new Font(FontFamily.TIMES_ROMAN, 12, Font.BOLD, new BaseColor(0, 0, 0)); 
	    	   Font bf12 = new Font(FontFamily.TIMES_ROMAN, 12); 
	    	
	    	float[] columnWidths = {.5f, .5f, .5f, 4f,.5f};
	    	PdfPTable table = new PdfPTable(columnWidths);
	    	table.setWidthPercentage(90f);
	    	insertCell(table, "Topic", Element.ALIGN_RIGHT, 1, bfBold12);
	    	insertCell(table, "Submitted by", Element.ALIGN_LEFT, 1, bfBold12);
	    	insertCell(table, "Objective", Element.ALIGN_LEFT, 1, bfBold12);
	    	insertCell(table, "Description", Element.ALIGN_RIGHT, 1, bfBold12);
	    	insertCell(table, "Section", Element.ALIGN_RIGHT, 1, bfBold12);
	    	table.setHeaderRows(1);
	    	
	    	//
	    	
	    	 for (Idea idea : listofIdeas) {
	    		 insertCell(table, idea.getIdeaOverview(), Element.ALIGN_RIGHT, 1, bf12);
	    		 insertCell(table, idea.getEmail(), Element.ALIGN_LEFT, 1, bf12);
	    		 insertCell(table, idea.getObjective(), Element.ALIGN_LEFT, 1, bf12);
	    		 insertCell(table, idea.getDescription(), Element.ALIGN_LEFT, 1, bf12);
	    		 insertCell(table, idea.getSection(), Element.ALIGN_LEFT, 1, bf12);
	                 
	             
	         }
	   	
	     subCatPart.add(table);

		  }
	  
	  private void insertCell(PdfPTable table, String text, int align, int colspan, Font font){
		   
		  //create a new cell with the specified Text and Font
		  PdfPCell cell = new PdfPCell(new Phrase(text.trim(), font));
		  //set the cell alignment
		  cell.setHorizontalAlignment(align);
		  //set the cell column span in case you want to merge two or more cells
		  cell.setColspan(colspan);
		  //in case there is no text and you wan to create an empty row
		  if(text.trim().equalsIgnoreCase("")){
		   cell.setMinimumHeight(10f);
		  }
		  //add the call to the table
		  table.addCell(cell);
		   
		 }

	
	 public void addMetaData(Document document) {
		    document.addTitle("My first PDF");
		    document.addSubject("Using iText");
		    document.addKeywords("Java, PDF, iText");
		    document.addAuthor("Lars Vogel");
		    document.addCreator("Lars Vogel");
		  }
	 
	 public  void addTitlePage(Document document)
		      throws DocumentException {
		    Paragraph preface = new Paragraph();
		    // We add one empty line
		    addEmptyLine(preface, 1);
		    // Lets write a big header
		    preface.add(new Paragraph("What the Hack", catFont));

		   addEmptyLine(preface, 1);
		    // Will create: Report generated by: _name, _date
		    preface.add(new Paragraph("Report generated by: " + System.getProperty("wth@snapdeal.com") + ", " + new Date(), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
		        smallBold));
		    addEmptyLine(preface, 3);
		    preface.add(new Paragraph("This document list down all the ideas",
		        smallBold));

		    addEmptyLine(preface, 8);

		    preface.add(new Paragraph("This document is a preliminary version and not subject to your license agreement or any other agreement with vogella.com ;-).",
		        redFont));

		    document.add(preface);
		    // Start a new page
		    document.newPage();
		  }
	 
	 public void addContent(Document document) throws DocumentException {
		    Anchor anchor = new Anchor("First Chapter", catFont);
		    anchor.setName("First Chapter");

		    // Second parameter is the number of the chapter
		    Chapter catPart = new Chapter(new Paragraph(anchor), 1);

		    Paragraph subPara = new Paragraph("Subcategory 1", subFont);
		    Section subCatPart = catPart.addSection(subPara);
		    subCatPart.add(new Paragraph("Hello"));

		    subPara = new Paragraph("Subcategory 2", subFont);
		    subCatPart = catPart.addSection(subPara);
		    subCatPart.add(new Paragraph("Paragraph 1"));
		    subCatPart.add(new Paragraph("Paragraph 2"));
		    subCatPart.add(new Paragraph("Paragraph 3"));

		    // add a list
		    createList(subCatPart);
		    Paragraph paragraph = new Paragraph();
		    //addEmptyLine(paragraph, 5);
		    subCatPart.add(paragraph);

		    // add a table
		    createTable(subCatPart);

		    // now add all this to the document
		    document.add(catPart);

		    // Next section
		    anchor = new Anchor("Second Chapter", catFont);
		    anchor.setName("Second Chapter");

		    // Second parameter is the number of the chapter
		    catPart = new Chapter(new Paragraph(anchor), 1);

		    subPara = new Paragraph("Subcategory", subFont);
		    subCatPart = catPart.addSection(subPara);
		    subCatPart.add(new Paragraph("This is a very important message"));

		    // now add all this to the document
		    document.add(catPart);

		  }
	 
	 public  void addEmptyLine(Paragraph paragraph, int number) {
		    for (int i = 0; i < number; i++) {
		      paragraph.add(new Paragraph(" "));
		    }
		  }
	 
	 public  void createList(Section subCatPart) {
		    List list = new List(true, false, 10);
		    list.add(new ListItem("First point"));
		    list.add(new ListItem("Second point"));
		    list.add(new ListItem("Third point"));
		    subCatPart.add(list);
		  }


	public Document buildPdf(String fileName) throws FileNotFoundException, DocumentException {
		Document document = new Document();
	      PdfWriter.getInstance(document, new FileOutputStream(fileName));
	      document.open();
	      addMetaData(document);
	      addTitlePage(document);
	      addContent(document);
	      document.close();
		return document;
	     


	}

}
